{"ast":null,"code":"var _templateObject = _taggedTemplateLiteral(['\\n    display: flex;\\n    ', '\\n    ', '\\n    ', '\\n    ', '\\n  '], ['\\n    display: flex;\\n    ', '\\n    ', '\\n    ', '\\n    ', '\\n  ']);\n\nfunction _taggedTemplateLiteral(strings, raw) {\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}\n/* eslint-disable no-shadow */\n\n\nimport { css } from 'styled-components';\nimport { map } from 'styled-components-breakpoint';\nimport '../types';\n\nfunction halign(_ref) {\n  var halign = _ref.halign,\n      reverse = _ref.reverse; //if no value is specified, then don't output any css (it just makes it harder for the consumer to override)\n\n  if (typeof halign === 'undefined' && typeof reverse === 'undefined') {\n    return '';\n  }\n\n  return map(halign, function () {\n    var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'left';\n    var rule = '';\n\n    switch (value) {\n      case 'left':\n        if (reverse) {\n          rule = 'flex-end';\n        } else {\n          rule = 'flex-start';\n        }\n\n        break;\n\n      case 'right':\n        if (reverse) {\n          rule = 'flex-start';\n        } else {\n          rule = 'flex-end';\n        }\n\n        break;\n\n      case 'center':\n        rule = 'center';\n        break;\n\n      case 'justify-center':\n        rule = 'space-around';\n        break;\n\n      case 'justify':\n        rule = 'space-between';\n        break;\n\n      default:\n        throw new Error('styled-components-grid: halign must be one of \"left\", \"right\", \"center\", \"justify-center\" or \"justify\". Got \"' + String(value) + '\"');\n    }\n\n    return 'justify-content: ' + rule + ';';\n  });\n}\n\nfunction valign(_ref2) {\n  var valign = _ref2.valign; //if no value is specified, then don't output any css (it just makes it harder for the consumer to override)\n\n  if (typeof valign === 'undefined') {\n    return '';\n  }\n\n  return map(valign, function () {\n    var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'stretch';\n    var rule = '';\n\n    switch (value) {\n      case 'top':\n        rule = 'flex-start';\n        break;\n\n      case 'bottom':\n        rule = 'flex-end';\n        break;\n\n      case 'center':\n        rule = 'center';\n        break;\n\n      case 'stretch':\n        rule = 'stretch';\n        break;\n\n      default:\n        throw new Error('styled-components-grid: valign must be one of \"top\", \"bottom\", \"center\" or \"stretch\". Got \"' + String(value) + '\".');\n    }\n\n    return 'align-items: ' + rule + ';';\n  });\n}\n\nfunction reverse(_ref3) {\n  var reverse = _ref3.reverse; //if no value is specified, then don't output any css (it just makes it harder for the consumer to override)\n\n  if (typeof reverse === 'undefined') {\n    return '';\n  }\n\n  return map(reverse, function () {\n    var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    return 'flex-direction: ' + (value && 'row-reverse' || 'row') + ';';\n  });\n}\n\nfunction wrap(_ref4) {\n  var wrap = _ref4.wrap,\n      reverse = _ref4.reverse;\n  return map(wrap, function () {\n    var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n    if (value && reverse) {\n      return 'flex-wrap: wrap-reverse;';\n    } else if (value === false) {\n      return 'flex-wrap: nowrap;';\n    } else {\n      return 'flex-wrap: wrap;';\n    }\n  });\n}\n\nexport default function (props) {\n  return css(_templateObject, halign(props), valign(props), reverse(props), wrap(props));\n}","map":null,"metadata":{},"sourceType":"module"}