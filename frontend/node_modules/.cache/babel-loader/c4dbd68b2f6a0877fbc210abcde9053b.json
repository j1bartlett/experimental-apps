{"ast":null,"code":"var _templateObject = _taggedTemplateLiteral(['\\n    box-sizing: border-box;\\n    ', ' ', ';\\n  '], ['\\n    box-sizing: border-box;\\n    ', ' ', ';\\n  ']);\n\nfunction _taggedTemplateLiteral(strings, raw) {\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}\n/* eslint-disable no-shadow */\n\n\nimport { css } from 'styled-components';\nimport { map } from 'styled-components-breakpoint';\nimport '../types';\n\nfunction size(_ref) {\n  var size = _ref.size;\n  return map(size, function () {\n    var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n\n    switch (value) {\n      case 'min':\n        return '\\n          flex-grow: 0;\\n          flex-basis: auto;\\n          width: auto;\\n          max-width: none;\\n        ';\n\n      case 'max':\n        return '\\n          flex-grow: 1;\\n          flex-basis: auto;\\n          width: auto;\\n          max-width: none;\\n          max-width: 100%; /* TODO: does this always work as expected? */\\n        ';\n\n      default:\n        {\n          var pct = Math.round((typeof value === 'number' ? value : 1) * 100 * 10000) / 10000; //round to 4 decimal places\n\n          return '\\n          flex-basis: ' + pct + '%;\\n          max-width: ' + pct + '%;\\n        ';\n        }\n    }\n  });\n}\n\nfunction visible(_ref2) {\n  var visible = _ref2.visible; //if no value is specified, then don't output any css (it just makes it harder for the consumer to override)\n\n  if (typeof visible === 'undefined') {\n    return '';\n  }\n\n  return map(visible, function (value) {\n    if (value === false) {\n      return 'display: none;';\n    } else {\n      return 'display: flex;';\n      /* TODO: does this always work as expected? */\n    }\n  });\n}\n\nexport default function (props) {\n  return css(_templateObject, size(props), visible(props));\n}","map":null,"metadata":{},"sourceType":"module"}